INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 28, 'Bellingen Mayoral', 1.00000000, 2.644142721818756, 0.37819441, 20, 'WOODWARD Andrew', 3167, 0, 0, 20, 0, 0, 0, 1, 'ALLAN Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 29, 'Bellingen Mayoral', 1.00000000, 3.3335987261146496, 0.29997612, 25, 'KING Dominic', 2512, 0, 0, 25, 0, 0, 0, 1, 'ALLAN Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 30, 'City of Griffith Mayoral', 1.00000000, 3.2431381518755718, 0.30834332, 24, 'LA ROCCA Mariacarmina (Carmel)', 4372, 0, 0, 24, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 31, 'City of Griffith Mayoral', 1.00000000, 3.504448838358873, 0.28535158, 26, 'MERCURI Rina', 4046, 0, 0, 26, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 32, 'City of Griffith Mayoral', 1.00000000, 3.9320576816417083, 0.25431977, 29, 'NAPOLI Anne', 3606, 0, 0, 29, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 33, 'City of Griffith Mayoral', 1.00000000, 3.249083409715857, 0.30777911, 24, 'ZAPPACOSTA Dino', 4364, 0, 0, 24, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 34, 'City of Griffith Mayoral', 1.00000000, 3.2283697632058286, 0.30975386, 24, 'MERCURI Rina', 4392, 0, 0, 24, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 35, 'City of Griffith Mayoral', 1.00000000, 3.3663342830009495, 0.29705903, 25, 'ZAPPACOSTA Dino', 4212, 0, 0, 25, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 36, 'City of Griffith Mayoral', 1.00000000, 3.3012805587892897, 0.30291276, 25, 'ZAPPACOSTA Dino', 4295, 0, 0, 25, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 37, 'City of Griffith Mayoral', 1.00000000, 3.322943520037497, 0.30093801, 25, 'MERCURI Rina', 4267, 0, 0, 25, 0, 0, 0, 1, 'CURRAN Doug');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 38, 'Nambucca Valley Mayoral', 1.00000000, 2.7360806663743973, 0.36548630, 20, 'JENVEY Susan', 4562, 0, 0, 20, 0, 0, 0, 1, 'HOBAN Rhonda');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 39, 'City of Wollongong Mayoral', 1.00000000, 5.1374813259579275, 0.19464791, 38, 'GLYKIS Marie', 24767, 0, 0, 38, 0, 0, 0, 1, 'BRADBERY Gordon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 40, 'City of Wollongong Mayoral', 1.00000000, 15.333815377199326, 0.06521534, 112, 'DORAHY John', 8298, 0, 0, 112, 0, 0, 0, 1, 'BRADBERY Gordon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 41, 'City of Wollongong Mayoral', 1.00000000, 6.110550833213273, 0.16365137, 45, 'ANTHONY Andrew', 20823, 0, 0, 45, 0, 0, 0, 1, 'BRADBERY Gordon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 42, 'City of Wollongong Mayoral', 1.00000000, 11.814298978644382, 0.08464319, 87, 'COX Mithra', 10770, 0, 0, 87, 0, 0, 0, 1, 'BRADBERY Gordon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 43, 'City of Wollongong Mayoral', 1.00000000, 47.72693173293323, 0.02095253, 348, 'BROWN Tania', 2666, 0, 0, 348, 0, 0, 0, 1, 'BRADBERY Gordon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 44, 'Mosman Mayoral', 1.00000000, 3.2797523961661343, 0.30490107, 24, 'HARDING Sarah', 5008, 0, 0, 24, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 45, 'Mosman Mayoral', 1.00000000, 3.7440164121267383, 0.26709285, 28, 'MOLINE Libby', 4387, 0, 0, 28, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 46, 'Mosman Mayoral', 1.00000000, 3.4369114877589455, 0.29095890, 26, 'BENDALL Roy', 4779, 0, 0, 26, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 47, 'Mosman Mayoral', 1.00000000, 4.498767460969598, 0.22228311, 33, 'MENZIES Simon', 3651, 0, 0, 33, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 48, 'Mosman Mayoral', 1.00000000, 3.372689938398357, 0.29649924, 25, 'MOLINE Libby', 4870, 0, 0, 25, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 49, 'Mosman Mayoral', 1.00000000, 3.6306366047745358, 0.27543379, 27, 'BENDALL Roy', 4524, 0, 0, 27, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 50, 'Mosman Mayoral', 1.00000000, 3.65, 0.27397260, 27, 'BENDALL Roy', 4500, 0, 0, 27, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 51, 'Mosman Mayoral', 1.00000000, 3.4419530595138306, 0.29053272, 26, 'MOLINE Libby', 4772, 0, 0, 26, 0, 0, 0, 1, 'CORRIGAN Carolyn');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 52, 'City of Cessnock Mayoral', 1.00000000, 3.686938074552985, 0.27122777, 27, 'MURRAY Janet', 9899, 0, 0, 27, 0, 0, 0, 1, 'SUVAAL Jay');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 53, 'City of Cessnock Mayoral', 1.00000000, 5.372736640659502, 0.18612489, 40, 'MOORES John', 6793, 0, 0, 40, 0, 0, 0, 1, 'SUVAAL Jay');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 54, 'City of Cessnock Mayoral', 1.00000000, 6.466513111268604, 0.15464285, 48, 'OLSEN Ian', 5644, 0, 0, 48, 0, 0, 0, 1, 'SUVAAL Jay');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 55, 'City of Lake Macquarie Mayoral', 1.00000000, 3.0626938622050943, 0.32650994, 23, 'DAWSON Rosmairi', 42556, 0, 0, 23, 0, 0, 0, 1, 'FRASER Kay');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 56, 'City of Lake Macquarie Mayoral', 1.00000000, 3.045447110778793, 0.32835901, 23, 'CUBIS Luke', 42797, 0, 0, 23, 0, 0, 0, 1, 'FRASER Kay');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 57, 'City of Lake Macquarie Mayoral', 1.00000000, 3.1113869658629745, 0.32140007, 23, 'PAULING Jason', 41890, 0, 0, 23, 0, 0, 0, 1, 'FRASER Kay');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 58, 'Eurobodalla Mayoral', 1.00000000, 9.126206649982123, 0.10957455, 67, 'SMITH Gary', 2797, 0, 0, 67, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 59, 'Eurobodalla Mayoral', 1.00000000, 7.070914127423823, 0.14142443, 52, 'WORTHINGTON Alison', 3610, 0, 0, 52, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 60, 'Eurobodalla Mayoral', 1.00000000, 15.660122699386504, 0.06385646, 115, 'GRACE David', 1630, 0, 0, 115, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 61, 'Eurobodalla Mayoral', 1.00000000, 8.606203641267701, 0.11619525, 63, 'HARRISON N (Tubby)', 2966, 0, 0, 63, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 62, 'Eurobodalla Mayoral', 1.00000000, 7.69550798914682, 0.12994594, 57, 'POLLOCK Rob', 3317, 0, 0, 57, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 63, 'Eurobodalla Mayoral', 1.00000000, 23.079566003616637, 0.04332837, 169, 'STARMER Karyn', 1106, 0, 0, 169, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 64, 'Eurobodalla Mayoral', 1.00000000, 6.518386108273749, 0.15341221, 48, 'WORTHINGTON Alison', 3916, 0, 0, 48, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 65, 'Eurobodalla Mayoral', 1.00000000, 12.213397129186603, 0.08187730, 89, 'WORTHINGTON Alison', 2090, 0, 0, 89, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 66, 'Eurobodalla Mayoral', 1.00000000, 9.241853729181752, 0.10820340, 68, 'WORTHINGTON Alison', 2762, 0, 0, 68, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 67, 'Eurobodalla Mayoral', 1.00000000, 7.905233818519665, 0.12649847, 58, 'WORTHINGTON Alison', 3229, 0, 0, 58, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 68, 'Eurobodalla Mayoral', 1.00000000, 13.512969825304394, 0.07400298, 99, 'GRACE David', 1889, 0, 0, 99, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 69, 'Eurobodalla Mayoral', 1.00000000, 11.58692691783931, 0.08630416, 85, 'HARRISON N (Tubby)', 2203, 0, 0, 85, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 70, 'Eurobodalla Mayoral', 1.00000000, 8.93767507002801, 0.11188592, 66, 'HARRISON N (Tubby)', 2856, 0, 0, 66, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 71, 'Eurobodalla Mayoral', 1.00000000, 11.171115973741795, 0.08951657, 82, 'HARRISON N (Tubby)', 2285, 0, 0, 82, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 72, 'Eurobodalla Mayoral', 1.00000000, 15.3125374925015, 0.06530596, 112, 'POLLOCK Rob', 1667, 0, 0, 112, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 73, 'Eurobodalla Mayoral', 1.00000000, 13.463080168776372, 0.07427721, 99, 'POLLOCK Rob', 1896, 0, 0, 99, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 74, 'Eurobodalla Mayoral', 1.00000000, 8.99119408242339, 0.11121993, 66, 'WORTHINGTON Alison', 2839, 0, 0, 66, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 75, 'Eurobodalla Mayoral', 1.00000000, 8.111217032094057, 0.12328606, 60, 'WORTHINGTON Alison', 3147, 0, 0, 60, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 76, 'Eurobodalla Mayoral', 1.00000000, 7.1722393930879464, 0.13942647, 53, 'WORTHINGTON Alison', 3559, 0, 0, 53, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 77, 'Eurobodalla Mayoral', 1.00000000, 10.2637716123844, 0.09743007, 75, 'WORTHINGTON Alison', 2487, 0, 0, 75, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 78, 'Eurobodalla Mayoral', 1.00000000, 8.878608695652174, 0.11263026, 65, 'WORTHINGTON Alison', 2875, 0, 0, 65, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 79, 'Eurobodalla Mayoral', 1.00000000, 15.776266996291719, 0.06338635, 115, 'GRACE David', 1618, 0, 0, 115, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 80, 'Eurobodalla Mayoral', 1.00000000, 13.527291997880234, 0.07392463, 99, 'HARRISON N (Tubby)', 1887, 0, 0, 99, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 81, 'Eurobodalla Mayoral', 1.00000000, 11.451772095109915, 0.08732273, 84, 'HARRISON N (Tubby)', 2229, 0, 0, 84, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 82, 'Eurobodalla Mayoral', 1.00000000, 13.820249052517596, 0.07235760, 101, 'HARRISON N (Tubby)', 1847, 0, 0, 101, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 179, 'City of Orange Mayoral', 1.00000000, 13.697975253093363, 0.07300349, 100, 'SPALDING Amanda', 1778, 0, 0, 100, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 83, 'Eurobodalla Mayoral', 1.00000000, 11.112755768393557, 0.08998668, 81, 'HARRISON N (Tubby)', 2297, 0, 0, 81, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 84, 'Eurobodalla Mayoral', 1.00000000, 10.093317516805062, 0.09907545, 74, 'WORTHINGTON Alison', 2529, 0, 0, 74, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 85, 'Eurobodalla Mayoral', 1.00000000, 9.045357902197024, 0.11055394, 66, 'WORTHINGTON Alison', 2822, 0, 0, 66, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 86, 'Eurobodalla Mayoral', 1.00000000, 7.939657853810265, 0.12595001, 58, 'WORTHINGTON Alison', 3215, 0, 0, 58, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 87, 'Eurobodalla Mayoral', 1.00000000, 11.035884133160398, 0.09061349, 81, 'WORTHINGTON Alison', 2313, 0, 0, 81, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 88, 'Eurobodalla Mayoral', 1.00000000, 13.364397905759162, 0.07482567, 98, 'HARRISON N (Tubby)', 1910, 0, 0, 98, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 89, 'Eurobodalla Mayoral', 1.00000000, 9.628819313466616, 0.10385489, 71, 'WORTHINGTON Alison', 2651, 0, 0, 71, 0, 0, 0, 1, 'HATCHER Mat');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 90, 'Burwood Mayoral', 1.00000000, 2.1426679508788826, 0.46670787, 16, 'MURRAY Alan', 8306, 0, 0, 16, 0, 0, 0, 1, 'FAKER John');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 91, 'Burwood Mayoral', 1.00000000, 2.342326928138984, 0.42692589, 18, 'CUTCHER Ned', 7598, 0, 0, 18, 0, 0, 0, 1, 'FAKER John');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 92, 'Burwood Mayoral', 1.00000000, 2.5269061479483175, 0.39574086, 19, 'HULL David', 7043, 0, 0, 19, 0, 0, 0, 1, 'FAKER John');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 93, 'City of Newcastle Mayoral', 1.00000000, 3.546042860173987, 0.28200449, 26, 'HOLDING Rod', 28278, 0, 0, 26, 0, 0, 0, 1, 'NELMES Nuatali');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 94, 'City of Newcastle Mayoral', 1.00000000, 4.978897715988084, 0.20084767, 37, 'MACKENZIE John', 20140, 0, 0, 37, 0, 0, 0, 1, 'NELMES Nuatali');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 95, 'City of Newcastle Mayoral', 1.00000000, 3.092807353031892, 0.32333084, 23, 'O''BRIEN Steve', 32422, 0, 0, 23, 0, 0, 0, 1, 'NELMES Nuatali');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 96, 'City of Newcastle Mayoral', 1.00000000, 4.784340855956868, 0.20901521, 35, 'BARRIE Jenny', 20959, 0, 0, 35, 0, 0, 0, 1, 'NELMES Nuatali');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 97, 'City of Newcastle Mayoral', 1.00000000, 5.913487055493307, 0.16910496, 44, 'CHURCH John', 16957, 0, 0, 44, 0, 0, 0, 1, 'NELMES Nuatali');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 98, 'City of Shoalhaven Mayoral', 1.00000000, 8.670288449101022, 0.11533642, 64, 'KITCHENER Mark', 7731, 0, 0, 64, 0, 0, 0, 1, 'FINDLEY Amanda');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 99, 'City of Shoalhaven Mayoral', 1.00000000, 8.9480710185556, 0.11175593, 66, 'WHITE Patricia', 7491, 0, 0, 66, 0, 0, 0, 1, 'FINDLEY Amanda');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 100, 'City of Shoalhaven Mayoral', 1.00000000, 10.329788873478194, 0.09680740, 76, 'WATSON Greg', 6489, 0, 0, 76, 0, 0, 0, 1, 'FINDLEY Amanda');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 101, 'City of Shoalhaven Mayoral', 1.00000000, 6.009503317195625, 0.16640310, 44, 'DIGIGLIO Nina', 11154, 0, 0, 44, 0, 0, 0, 1, 'FINDLEY Amanda');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 102, 'City of Shoalhaven Mayoral', 1.00000000, 41.53035935563817, 0.02407877, 303, 'GREEN Paul', 1614, 0, 0, 303, 0, 0, 0, 1, 'FINDLEY Amanda');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 103, 'The Hills Shire Mayoral', 1.00000000, 2.9656395103419166, 0.33719540, 22, 'SHAHAMAT Vida', 35535, 0, 0, 22, 0, 0, 0, 1, 'GANGEMI Peter');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 104, 'The Hills Shire Mayoral', 1.00000000, 2.3273337602968134, 0.42967623, 17, 'ROZYCKI Jerzy (George)', 45281, 0, 0, 17, 0, 0, 0, 1, 'GANGEMI Peter');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 105, 'The Hills Shire Mayoral', 1.00000000, 2.6366433986339413, 0.37927010, 20, 'YAZDANI Ereboni (Alexia)', 39969, 0, 0, 20, 0, 0, 0, 1, 'GANGEMI Peter');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 106, 'The Hills Shire Mayoral', 1.00000000, 3.6801229221958374, 0.27173005, 27, 'TRACEY Ryan', 28636, 0, 0, 27, 0, 0, 0, 1, 'GANGEMI Peter');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 107, 'City of Liverpool Mayoral', 1.00000000, 3.5587999011247065, 0.28099360, 26, 'MORSHED Asm', 32364, 0, 0, 26, 0, 0, 0, 1, 'MANNOUN Ned');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 108, 'City of Liverpool Mayoral', 1.00000000, 4.113464285714286, 0.24310409, 30, 'ANDJELKOVIC Milomir (Michael)', 28000, 0, 0, 30, 0, 0, 0, 1, 'MANNOUN Ned');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 109, 'City of Liverpool Mayoral', 1.00000000, 4.011318914777279, 0.24929456, 30, 'HARLE Peter', 28713, 0, 0, 30, 0, 0, 0, 1, 'MANNOUN Ned');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 110, 'City of Liverpool Mayoral', 1.00000000, 45.416798107255524, 0.02201828, 331, 'HAGARTY Nathan', 2536, 0, 0, 331, 0, 0, 0, 1, 'MANNOUN Ned');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 111, 'City of Sydney Mayoral', 1.00000000, 3.487463951503737, 0.28674132, 26, 'VITHOULKAS Angela', 33982, 0, 0, 26, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 112, 'City of Sydney Mayoral', 1.00000000, 3.6420098340503997, 0.27457367, 27, 'WELDON Yvonne', 32540, 0, 0, 27, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 113, 'City of Sydney Mayoral', 1.00000000, 3.6873366521468576, 0.27119845, 27, 'SCOTT Linda', 32140, 0, 0, 27, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 114, 'City of Sydney Mayoral', 1.00000000, 2.8911468371105853, 0.34588350, 22, 'JARRETT Shauna', 40991, 0, 0, 22, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 115, 'City of Sydney Mayoral', 1.00000000, 3.0947668041990912, 0.32312612, 23, 'ELLSMORE Sylvie', 38294, 0, 0, 23, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 116, 'City of Sydney Mayoral', 1.00000000, 3.371291212698774, 0.29662225, 25, 'WELDON Yvonne', 35153, 0, 0, 25, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 117, 'City of Sydney Mayoral', 1.00000000, 3.3133247595616195, 0.30181165, 25, 'JARRETT Shauna', 35768, 0, 0, 25, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 118, 'City of Sydney Mayoral', 1.00000000, 3.1484551419994156, 0.31761609, 23, 'JARRETT Shauna', 37641, 0, 0, 23, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 119, 'City of Sydney Mayoral', 1.00000000, 2.875154661685145, 0.34780738, 21, 'ELLSMORE Sylvie', 41219, 0, 0, 21, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 120, 'City of Sydney Mayoral', 1.00000000, 2.769077994298799, 0.36113103, 21, 'ELLSMORE Sylvie', 42798, 0, 0, 21, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 121, 'City of Sydney Mayoral', 1.00000000, 3.014243202685861, 0.33175823, 22, 'ELLSMORE Sylvie', 39317, 0, 0, 22, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 122, 'City of Sydney Mayoral', 1.00000000, 3.2483006249314768, 0.30785328, 24, 'WELDON Yvonne', 36484, 0, 0, 24, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 123, 'City of Sydney Mayoral', 1.00000000, 2.815255606233371, 0.35520753, 21, 'ELLSMORE Sylvie', 42096, 0, 0, 21, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 124, 'City of Sydney Mayoral', 1.00000000, 2.912032827972578, 0.34340272, 22, 'ELLSMORE Sylvie', 40697, 0, 0, 22, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 125, 'City of Sydney Mayoral', 1.00000000, 2.840287597363691, 0.35207702, 21, 'ELLSMORE Sylvie', 41725, 0, 0, 21, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 126, 'City of Sydney Mayoral', 1.00000000, 2.8704887855447367, 0.34837272, 21, 'ELLSMORE Sylvie', 41286, 0, 0, 21, 0, 0, 0, 1, 'MOORE Clover');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 127, 'City of Shellharbour Mayoral', 1.00000000, 17.83159922928709, 0.05608022, 130, 'SALIBA Marianne', 2595, 0, 0, 130, 0, 0, 0, 1, 'HOMER Chris');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 128, 'City of Coffs Harbour Mayoral', 1.00000000, 5.891831941544885, 0.16972650, 43, 'ADENDORFF Michael', 7664, 0, 0, 43, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 129, 'City of Coffs Harbour Mayoral', 1.00000000, 6.31626800951182, 0.15832134, 47, 'PIKE Donna', 7149, 0, 0, 47, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 130, 'City of Coffs Harbour Mayoral', 1.00000000, 5.99667994687915, 0.16675894, 44, 'ARKAN John', 7530, 0, 0, 44, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 180, 'Uralla Mayoral', 1.00000000, 1.5727953410981697, 0.63581063, 12, 'LEDGER Natasha', 2404, 0, 0, 12, 0, 0, 0, 1, 'BELL Robert');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 131, 'City of Coffs Harbour Mayoral', 1.00000000, 7.9976974849450935, 0.12503599, 59, 'CASSELL Jonathan', 5646, 0, 0, 59, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 132, 'City of Coffs Harbour Mayoral', 1.00000000, 6.651200471350714, 0.15034880, 49, 'SWAN Tegan', 6789, 0, 0, 49, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 133, 'City of Coffs Harbour Mayoral', 1.00000000, 5.830213040671401, 0.17152032, 43, 'CECATO George', 7745, 0, 0, 43, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 134, 'City of Coffs Harbour Mayoral', 1.00000000, 5.042997542997543, 0.19829476, 37, 'JUDGE Tony', 8954, 0, 0, 37, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 135, 'City of Coffs Harbour Mayoral', 1.00000000, 7.608256107834878, 0.13143616, 56, 'PRYCE Rodger', 5935, 0, 0, 56, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 136, 'City of Coffs Harbour Mayoral', 1.00000000, 6.762767710049423, 0.14786845, 50, 'TOWNLEY Sally', 6677, 0, 0, 50, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 137, 'City of Coffs Harbour Mayoral', 1.00000000, 7.242181234963914, 0.13807995, 53, 'SWAN Tegan', 6235, 0, 0, 53, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 138, 'City of Coffs Harbour Mayoral', 1.00000000, 6.013450526035424, 0.16629388, 44, 'CECATO George', 7509, 0, 0, 44, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 139, 'City of Coffs Harbour Mayoral', 1.00000000, 6.395892351274788, 0.15635035, 47, 'CECATO George', 7060, 0, 0, 47, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 140, 'City of Coffs Harbour Mayoral', 1.00000000, 7.035680897475849, 0.14213265, 52, 'CECATO George', 6418, 0, 0, 52, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 141, 'City of Coffs Harbour Mayoral', 1.00000000, 5.165884910193341, 0.19357768, 38, 'JUDGE Tony', 8741, 0, 0, 38, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 142, 'City of Coffs Harbour Mayoral', 1.00000000, 5.303617571059432, 0.18855055, 39, 'JUDGE Tony', 8514, 0, 0, 39, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 143, 'City of Coffs Harbour Mayoral', 1.00000000, 5.603052487901725, 0.17847414, 41, 'JUDGE Tony', 8059, 0, 0, 41, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 144, 'City of Coffs Harbour Mayoral', 1.00000000, 5.4357770554953655, 0.18396634, 40, 'JUDGE Tony', 8307, 0, 0, 40, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 145, 'City of Coffs Harbour Mayoral', 1.00000000, 6.939449823267251, 0.14410364, 51, 'TOWNLEY Sally', 6507, 0, 0, 51, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 146, 'City of Coffs Harbour Mayoral', 1.00000000, 8.571564160971906, 0.11666482, 63, 'TOWNLEY Sally', 5268, 0, 0, 63, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 147, 'City of Coffs Harbour Mayoral', 1.00000000, 7.98073524213503, 0.12530174, 59, 'SWAN Tegan', 5658, 0, 0, 59, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 148, 'City of Coffs Harbour Mayoral', 1.00000000, 6.5565558298243065, 0.15251910, 48, 'CECATO George', 6887, 0, 0, 48, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 149, 'City of Coffs Harbour Mayoral', 1.00000000, 7.063194118567183, 0.14157901, 52, 'CECATO George', 6393, 0, 0, 52, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 150, 'City of Coffs Harbour Mayoral', 1.00000000, 7.751931330472103, 0.12900011, 57, 'CECATO George', 5825, 0, 0, 57, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 151, 'City of Coffs Harbour Mayoral', 1.00000000, 5.502010478859511, 0.18175174, 41, 'JUDGE Tony', 8207, 0, 0, 41, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 152, 'City of Coffs Harbour Mayoral', 1.00000000, 5.663489276307538, 0.17656959, 42, 'JUDGE Tony', 7973, 0, 0, 42, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 153, 'City of Coffs Harbour Mayoral', 1.00000000, 5.487301008628023, 0.18223895, 40, 'JUDGE Tony', 8229, 0, 0, 40, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 154, 'City of Coffs Harbour Mayoral', 1.00000000, 5.808464111139696, 0.17216255, 43, 'JUDGE Tony', 7774, 0, 0, 43, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 155, 'City of Coffs Harbour Mayoral', 1.00000000, 5.6913284597932945, 0.17570590, 42, 'JUDGE Tony', 7934, 0, 0, 42, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 156, 'City of Coffs Harbour Mayoral', 1.00000000, 6.044846050870147, 0.16543018, 45, 'JUDGE Tony', 7470, 0, 0, 45, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 157, 'City of Coffs Harbour Mayoral', 1.00000000, 7.741299502828733, 0.12917728, 57, 'CECATO George', 5833, 0, 0, 57, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 158, 'City of Coffs Harbour Mayoral', 1.00000000, 5.961843147610246, 0.16773336, 44, 'JUDGE Tony', 7574, 0, 0, 44, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 159, 'City of Coffs Harbour Mayoral', 1.00000000, 5.819693259440649, 0.17183036, 43, 'JUDGE Tony', 7759, 0, 0, 43, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 160, 'City of Coffs Harbour Mayoral', 1.00000000, 6.024683122081387, 0.16598383, 44, 'JUDGE Tony', 7495, 0, 0, 44, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 161, 'City of Coffs Harbour Mayoral', 1.00000000, 6.229994481236203, 0.16051379, 46, 'JUDGE Tony', 7248, 0, 0, 46, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 162, 'City of Coffs Harbour Mayoral', 1.00000000, 6.315384615384615, 0.15834348, 47, 'JUDGE Tony', 7150, 0, 0, 47, 0, 0, 0, 1, 'AMOS Paul');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 163, 'City of Orange Mayoral', 1.00000000, 23.019848771266542, 0.04344077, 168, 'WHITTON Jeffery', 1058, 0, 0, 168, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 164, 'City of Orange Mayoral', 1.00000000, 11.428906616611918, 0.08749743, 84, 'SMITH Lesley', 2131, 0, 0, 84, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 165, 'City of Orange Mayoral', 1.00000000, 10.190376569037657, 0.09813180, 75, 'SPALDING Amanda', 2390, 0, 0, 75, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 166, 'City of Orange Mayoral', 1.00000000, 10.014391447368421, 0.09985629, 73, 'JONES Neil', 2432, 0, 0, 73, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 167, 'City of Orange Mayoral', 1.00000000, 10.324289953370073, 0.09685896, 76, 'DUFFY Kevin', 2359, 0, 0, 76, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 168, 'City of Orange Mayoral', 1.00000000, 50.01026694045174, 0.01999589, 365, 'MILETO Tony', 487, 0, 0, 365, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 169, 'City of Orange Mayoral', 1.00000000, 9.957072771872445, 0.10043112, 73, 'SPALDING Amanda', 2446, 0, 0, 73, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 170, 'City of Orange Mayoral', 1.00000000, 11.045351473922903, 0.09053582, 81, 'SPALDING Amanda', 2205, 0, 0, 81, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 171, 'City of Orange Mayoral', 1.00000000, 13.418732782369146, 0.07452269, 98, 'SPALDING Amanda', 1815, 0, 0, 98, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 172, 'City of Orange Mayoral', 1.00000000, 12.116915422885572, 0.08252925, 89, 'JONES Neil', 2010, 0, 0, 89, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 173, 'City of Orange Mayoral', 1.00000000, 13.485603543743078, 0.07415315, 99, 'JONES Neil', 1806, 0, 0, 99, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 174, 'City of Orange Mayoral', 1.00000000, 14.49702380952381, 0.06897968, 106, 'DUFFY Kevin', 1680, 0, 0, 106, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 175, 'City of Orange Mayoral', 1.00000000, 11.614210777300906, 0.08610142, 85, 'SPALDING Amanda', 2097, 0, 0, 85, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 176, 'City of Orange Mayoral', 1.00000000, 12.464176049129989, 0.08022993, 91, 'SPALDING Amanda', 1954, 0, 0, 91, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 177, 'City of Orange Mayoral', 1.00000000, 14.557680812910938, 0.06869226, 107, 'SPALDING Amanda', 1673, 0, 0, 107, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 178, 'City of Orange Mayoral', 1.00000000, 15.845803513337671, 0.06310819, 116, 'JONES Neil', 1537, 0, 0, 116, 0, 0, 0, 1, 'HAMLING Jason');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 181, 'Uralla Mayoral', 1.00000000, 1.6297413793103448, 0.61359429, 12, 'STRUTT Isabel', 2320, 0, 0, 12, 0, 0, 0, 1, 'BELL Robert');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 182, 'Uralla Mayoral', 1.00000000, 1.6034775233248515, 0.62364454, 12, 'LEDGER Natasha', 2358, 0, 0, 12, 0, 0, 0, 1, 'BELL Robert');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 183, 'Port Macquarie-Hastings Mayoral', 1.00000000, 2.429628638937185, 0.41158553, 18, 'GATES Steven', 22431, 0, 0, 18, 0, 0, 0, 1, 'PINSON Peta');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 184, 'Port Macquarie-Hastings Mayoral', 1.00000000, 2.654861652377241, 0.37666746, 20, 'INTEMANN Lisa', 20528, 0, 0, 20, 0, 0, 0, 1, 'PINSON Peta');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 185, 'Port Macquarie-Hastings Mayoral', 1.00000000, 2.27733901633864, 0.43910897, 17, 'LIPOVAC Nik', 23931, 0, 0, 17, 0, 0, 0, 1, 'PINSON Peta');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 186, 'Port Macquarie-Hastings Mayoral', 1.00000000, 2.8524547262640008, 0.35057524, 21, 'SHEPPARD Rachel', 19106, 0, 0, 21, 0, 0, 0, 1, 'PINSON Peta');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 187, 'Singleton Mayoral', 1.00000000, 11.021634615384615, 0.09073064, 81, 'JARRETT Tony', 1248, 0, 0, 81, 0, 0, 0, 1, 'MOORE Sue');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 188, 'Singleton Mayoral', 1.00000000, 5.2924201616006155, 0.18894947, 39, 'CHARLTON Belinda', 2599, 0, 0, 39, 0, 0, 0, 1, 'MOORE Sue');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 189, 'Singleton Mayoral', 1.00000000, 12.118942731277533, 0.08251545, 89, 'THOMPSON Danny', 1135, 0, 0, 89, 0, 0, 0, 1, 'MOORE Sue');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 190, 'City of Lismore Mayoral', 1.00000000, 2.3876262626262625, 0.41882602, 18, 'HEALEY Patrick', 11088, 0, 0, 18, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 191, 'City of Lismore Mayoral', 1.00000000, 2.22976501305483, 0.44847775, 17, 'ROB Big', 11873, 0, 0, 17, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 192, 'City of Lismore Mayoral', 1.00000000, 2.862673010380623, 0.34932386, 21, 'COOK Darlene', 9248, 0, 0, 21, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 193, 'City of Lismore Mayoral', 1.00000000, 2.924334474759748, 0.34195815, 22, 'GRINDON-EKINS Vanessa', 9053, 0, 0, 22, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 194, 'City of Lismore Mayoral', 1.00000000, 2.929836210712705, 0.34131601, 22, 'BIRD Elly', 9036, 0, 0, 22, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 195, 'City of Lismore Mayoral', 1.00000000, 2.12710911136108, 0.47012163, 16, 'COOK Darlene', 12446, 0, 0, 16, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 196, 'City of Lismore Mayoral', 1.00000000, 2.1948267285690597, 0.45561683, 16, 'COOK Darlene', 12062, 0, 0, 16, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 197, 'City of Lismore Mayoral', 1.00000000, 2.2859856661773597, 0.43744806, 17, 'BIRD Elly', 11581, 0, 0, 17, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 198, 'City of Lismore Mayoral', 1.00000000, 2.0957884737175427, 0.47714739, 16, 'COOK Darlene', 12632, 0, 0, 16, 0, 0, 0, 1, 'KRIEG Steve');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 199, 'City of Maitland Mayoral', 1.00000000, 5.962473863761417, 0.16771562, 44, 'BROWN John', 9087, 0, 0, 44, 0, 0, 0, 1, 'PENFOLD Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 200, 'City of Maitland Mayoral', 1.00000000, 10.28688057717866, 0.09721120, 75, 'MITCHELL Ben', 5267, 0, 0, 75, 0, 0, 0, 1, 'PENFOLD Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 201, 'City of Maitland Mayoral', 1.00000000, 4.13185388545718, 0.24202211, 31, 'SAFFARI Shahriar (Sean)', 13113, 0, 0, 31, 0, 0, 0, 1, 'PENFOLD Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 202, 'City of Maitland Mayoral', 1.00000000, 6.040245261984392, 0.16555619, 45, 'COOPER Michael', 8970, 0, 0, 45, 0, 0, 0, 1, 'PENFOLD Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 203, 'City of Maitland Mayoral', 1.00000000, 4.535493052067638, 0.22048320, 34, 'BURKE Brian', 11946, 0, 0, 34, 0, 0, 0, 1, 'PENFOLD Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 204, 'City of Maitland Mayoral', 1.00000000, 47.072980017376196, 0.02124361, 344, 'BAKER Loretta', 1151, 0, 0, 344, 0, 0, 0, 1, 'PENFOLD Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 205, 'Port Stephens Mayoral', 1.00000000, 84.31569664902999, 0.01186019, 615, 'ANDERSON Leah', 567, 0, 0, 615, 0, 0, 0, 1, 'PALMER Ryan');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 206, 'Hornsby Mayoral', 1.00000000, 6.866762866762866, 0.14562903, 51, 'HEYDE Emma', 12474, 0, 0, 51, 0, 0, 0, 1, 'RUDDOCK Philip');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 207, 'Byron Mayoral', 1.00000000, 8.658245948522403, 0.11549683, 64, 'HUNTER Alan', 2098, 0, 0, 64, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 208, 'Byron Mayoral', 1.00000000, 9.734726688102894, 0.10272502, 71, 'CLARKE Bruce', 1866, 0, 0, 71, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 209, 'Byron Mayoral', 1.00000000, 6.469017094017094, 0.15458299, 48, 'ANDERSON John', 2808, 0, 0, 48, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 210, 'Byron Mayoral', 1.00000000, 5.430493273542601, 0.18414533, 40, 'MCILRATH Christopher', 3345, 0, 0, 40, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 211, 'Byron Mayoral', 1.00000000, 7.890964378801042, 0.12672722, 58, 'COOREY Cate', 2302, 0, 0, 58, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 212, 'Byron Mayoral', 1.00000000, 6.233699382292381, 0.16041839, 46, 'DEY Duncan', 2914, 0, 0, 46, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 213, 'Byron Mayoral', 1.00000000, 7.953152364273205, 0.12573631, 58, 'PUGH Asren', 2284, 0, 0, 58, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 214, 'Byron Mayoral', 1.00000000, 17.13679245283019, 0.05835398, 125, 'SWIVEL Mark', 1060, 0, 0, 125, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 215, 'Byron Mayoral', 1.00000000, 14.708502024291498, 0.06798789, 108, 'COOREY Cate', 1235, 0, 0, 108, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 216, 'Byron Mayoral', 1.00000000, 5.522955305564001, 0.18106248, 41, 'DEY Duncan', 3289, 0, 0, 41, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 217, 'Byron Mayoral', 1.00000000, 12.450308430431802, 0.08031930, 91, 'DEY Duncan', 1459, 0, 0, 91, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 218, 'Byron Mayoral', 1.00000000, 10.07487520798669, 0.09925681, 74, 'PUGH Asren', 1803, 0, 0, 74, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 219, 'Byron Mayoral', 1.00000000, 7.729787234042553, 0.12936967, 57, 'PUGH Asren', 2350, 0, 0, 57, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 220, 'Byron Mayoral', 1.00000000, 6.065108514190317, 0.16487751, 45, 'PUGH Asren', 2995, 0, 0, 45, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 221, 'Byron Mayoral', 1.00000000, 8.917525773195877, 0.11213873, 65, 'COOREY Cate', 2037, 0, 0, 65, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 222, 'Byron Mayoral', 1.00000000, 7.970601140851251, 0.12546105, 59, 'DEY Duncan', 2279, 0, 0, 59, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 223, 'Byron Mayoral', 1.00000000, 7.330508474576271, 0.13641618, 54, 'PUGH Asren', 2478, 0, 0, 54, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 224, 'Byron Mayoral', 1.00000000, 6.193317422434368, 0.16146435, 46, 'PUGH Asren', 2933, 0, 0, 46, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 225, 'Byron Mayoral', 1.00000000, 6.826381059751973, 0.14649050, 50, 'PUGH Asren', 2661, 0, 0, 50, 0, 0, 0, 1, 'LYON Michael');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 226, 'City of Broken Hill Mayoral', 1.00000000, 3.1978704525288375, 0.31270810, 24, 'TURLEY Darriea', 3381, 0, 0, 24, 0, 0, 0, 1, 'KENNEDY Tom');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 227, 'City of Broken Hill Mayoral', 1.00000000, 3.2773567747802366, 0.30512394, 24, 'GALLAGHER Dave', 3299, 0, 0, 24, 0, 0, 0, 1, 'KENNEDY Tom');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 228, 'City of Broken Hill Mayoral', 1.00000000, 3.1275672548452413, 0.31973733, 23, 'GALLAGHER Dave', 3457, 0, 0, 23, 0, 0, 0, 1, 'KENNEDY Tom');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 229, 'Ballina Mayoral', 1.00000000, 6.610906411201179, 0.15126519, 49, 'WILLIAMS Keith', 4071, 0, 0, 49, 0, 0, 0, 1, 'CADWALLADER Sharon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 230, 'Ballina Mayoral', 1.00000000, 4.441822082851956, 0.22513284, 33, 'MCCARTHY Steve', 6059, 0, 0, 33, 0, 0, 0, 1, 'CADWALLADER Sharon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 231, 'Ballina Mayoral', 1.00000000, 5.565136476426799, 0.17969011, 41, 'JOHNSTON Eoin', 4836, 0, 0, 41, 0, 0, 0, 1, 'CADWALLADER Sharon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 232, 'Ballina Mayoral', 1.00000000, 7.285598267460747, 0.13725709, 54, 'JOHNSON Jeff', 3694, 0, 0, 54, 0, 0, 0, 1, 'CADWALLADER Sharon');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 233, 'Canada Bay Mayoral', 1.00000000, 5.637862950058072, 0.17737217, 42, 'JAGO Charles', 8610, 0, 0, 42, 0, 0, 0, 1, 'TSIREKAS Angelo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 234, 'Canada Bay Mayoral', 1.00000000, 4.124214103653356, 0.24247044, 31, 'RAMONDINO Daniela', 11770, 0, 0, 31, 0, 0, 0, 1, 'TSIREKAS Angelo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 235, 'Canada Bay Mayoral', 1.00000000, 8.140533288613113, 0.12284207, 60, 'LITTLE Julia', 5963, 0, 0, 60, 0, 0, 0, 1, 'TSIREKAS Angelo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 236, 'Canada Bay Mayoral', 1.00000000, 5.364349651895237, 0.18641589, 40, 'MEGNA Michael', 9049, 0, 0, 40, 0, 0, 0, 1, 'TSIREKAS Angelo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 237, 'Canada Bay Mayoral', 1.00000000, 6.224131298884473, 0.16066499, 46, 'MEGNA Michael', 7799, 0, 0, 46, 0, 0, 0, 1, 'TSIREKAS Angelo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 238, 'City of Willoughby Mayoral', 1.00000000, 12.278964401294498, 0.08144009, 90, 'CAMPBELL Craig', 3090, 0, 0, 90, 0, 0, 0, 1, 'TAYLOR Tanya');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 239, 'City of Willoughby Mayoral', 1.00000000, 14.990912682734097, 0.06670708, 110, 'ROZOS Angelo', 2531, 0, 0, 110, 0, 0, 0, 1, 'TAYLOR Tanya');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 240, 'Kempsey Mayoral', 1.00000000, 5.899027172089903, 0.16951948, 43, 'EVANS Andrew', 2981, 0, 0, 43, 0, 0, 0, 1, 'HAUVILLE Leo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 241, 'Kempsey Mayoral', 1.00000000, 10.47973778307509, 0.09542223, 77, 'BAIN Arthur', 1678, 0, 0, 77, 0, 0, 0, 1, 'HAUVILLE Leo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 242, 'Kempsey Mayoral', 1.00000000, 6.5591197314434915, 0.15245948, 48, 'SAUL Dean', 2681, 0, 0, 48, 0, 0, 0, 1, 'HAUVILLE Leo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 243, 'Kempsey Mayoral', 1.00000000, 6.022260273972603, 0.16605061, 44, 'IRWIN Troy', 2920, 0, 0, 44, 0, 0, 0, 1, 'HAUVILLE Leo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 244, 'Kempsey Mayoral', 1.00000000, 5.379320893239523, 0.18589707, 40, 'RAEBURN Bruce', 3269, 0, 0, 40, 0, 0, 0, 1, 'HAUVILLE Leo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 245, 'Kempsey Mayoral', 1.00000000, 45.43927648578811, 0.02200739, 332, 'CAMPBELL Liz', 387, 0, 0, 332, 0, 0, 0, 1, 'HAUVILLE Leo');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 246, 'Richmond Valley Mayoral', 1.00000000, 2.302868922865487, 0.43424095, 17, 'HAYES Robert', 5821, 0, 0, 17, 0, 0, 0, 1, 'MUSTOW Robert');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEB', 247, 'Wollondilly Mayoral', 1.00000000, 20.320803629293582, 0.04921065, 149, 'KHAN Robert', 1543, 0, 0, 149, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 248, 'Wollondilly Mayoral', 1.00000000, 8.173879040667362, 0.12234093, 60, 'BANASIK Michael', 3836, 0, 0, 60, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 249, 'Wollondilly Mayoral', 1.00000000, 15.97300050942435, 0.06260565, 117, 'DEETH Matthew', 1963, 0, 0, 117, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 250, 'Wollondilly Mayoral', 1.00000000, 10.982486865148863, 0.09105406, 81, 'LAW Ray', 2855, 0, 0, 81, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 251, 'Wollondilly Mayoral', 1.00000000, 24.40077821011673, 0.04098230, 178, 'HANNAN Judy', 1285, 0, 0, 178, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 252, 'Wollondilly Mayoral', 1.00000000, 9.475672408582653, 0.10553341, 70, 'BANASIK Michael', 3309, 0, 0, 70, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 253, 'Wollondilly Mayoral', 1.00000000, 9.287618483412322, 0.10767023, 68, 'BANASIK Michael', 3376, 0, 0, 68, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 254, 'Wollondilly Mayoral', 1.00000000, 8.09370160041301, 0.12355286, 59, 'BANASIK Michael', 3874, 0, 0, 59, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 255, 'Wollondilly Mayoral', 1.00000000, 19.107251675807433, 0.05233615, 140, 'DEETH Matthew', 1641, 0, 0, 140, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 256, 'Wollondilly Mayoral', 1.00000000, 11.725878833208677, 0.08528145, 86, 'LAW Ray', 2674, 0, 0, 86, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 257, 'Wollondilly Mayoral', 1.00000000, 14.98088867654085, 0.06675171, 110, 'LAW Ray', 2093, 0, 0, 110, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 258, 'Wollondilly Mayoral', 1.00000000, 10.07227754577578, 0.09928241, 74, 'BANASIK Michael', 3113, 0, 0, 74, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 259, 'Wollondilly Mayoral', 1.00000000, 8.91273450824332, 0.11219901, 65, 'BANASIK Michael', 3518, 0, 0, 65, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 260, 'Wollondilly Mayoral', 1.00000000, 8.797699214365881, 0.11366608, 65, 'BANASIK Michael', 3564, 0, 0, 65, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 261, 'Wollondilly Mayoral', 1.00000000, 15.476307996051332, 0.06461489, 113, 'LAW Ray', 2026, 0, 0, 113, 0, 0, 0, 1, 'GOULD Matt');
INSERT INTO public.assertion (assertion_type, id, contest_name, current_risk, difficulty, diluted_margin, estimated_samples_to_audit, loser, margin, one_vote_over_count, one_vote_under_count, optimistic_samples_to_audit, other_count, two_vote_over_count, two_vote_under_count, version, winner) VALUES ('NEN', 262, 'Wollondilly Mayoral', 1.00000000, 9.351327169698777, 0.10693669, 69, 'BANASIK Michael', 3353, 0, 0, 69, 0, 0, 0, 1, 'GOULD Matt');

INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (29, 'ALLAN Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (29, 'KING Dominic');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (31, 'MERCURI Rina');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (31, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (32, 'NAPOLI Anne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (32, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (33, 'ZAPPACOSTA Dino');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (33, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (34, 'MERCURI Rina');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (34, 'NAPOLI Anne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (34, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (35, 'MERCURI Rina');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (35, 'ZAPPACOSTA Dino');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (35, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (36, 'NAPOLI Anne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (36, 'ZAPPACOSTA Dino');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (36, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (37, 'MERCURI Rina');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (37, 'NAPOLI Anne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (37, 'ZAPPACOSTA Dino');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (37, 'CURRAN Doug');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (43, 'BROWN Tania');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (43, 'BRADBERY Gordon');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (45, 'MOLINE Libby');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (45, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (46, 'BENDALL Roy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (46, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (47, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (47, 'MENZIES Simon');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (48, 'MOLINE Libby');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (48, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (48, 'MENZIES Simon');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (49, 'MOLINE Libby');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (49, 'BENDALL Roy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (49, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (50, 'BENDALL Roy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (50, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (50, 'MENZIES Simon');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (51, 'MOLINE Libby');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (51, 'BENDALL Roy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (51, 'CORRIGAN Carolyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (51, 'MENZIES Simon');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (54, 'SUVAAL Jay');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (54, 'OLSEN Ian');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (57, 'FRASER Kay');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (57, 'PAULING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (59, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (59, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (60, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (60, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (61, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (61, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (62, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (62, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (63, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (63, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (64, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (64, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (64, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (65, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (65, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (65, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (66, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (66, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (66, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (67, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (67, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (67, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (68, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (68, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (68, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (69, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (69, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (69, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (70, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (70, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (70, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (71, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (71, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (71, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (72, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (72, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (72, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (73, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (73, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (73, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (74, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (74, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (74, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (74, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (75, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (75, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (75, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (75, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (76, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (76, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (76, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (76, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (77, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (77, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (77, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (77, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (78, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (78, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (78, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (78, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (79, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (79, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (79, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (79, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (80, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (80, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (80, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (80, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (81, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (81, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (81, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (81, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (82, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (82, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (82, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (82, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (83, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (83, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (83, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (83, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (84, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (84, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (84, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (84, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (84, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (85, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (85, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (85, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (85, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (85, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (86, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (86, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (86, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (86, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (86, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (87, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (87, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (87, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (87, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (87, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (88, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (88, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (88, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (88, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (88, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (89, 'WORTHINGTON Alison');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (89, 'GRACE David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (89, 'HATCHER Mat');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (89, 'HARRISON N (Tubby)');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (89, 'POLLOCK Rob');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (89, 'STARMER Karyn');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (92, 'HULL David');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (92, 'FAKER John');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (97, 'CHURCH John');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (97, 'NELMES Nuatali');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (102, 'GREEN Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (102, 'FINDLEY Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (106, 'GANGEMI Peter');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (106, 'TRACEY Ryan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (110, 'HAGARTY Nathan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (110, 'MANNOUN Ned');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (112, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (112, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (113, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (113, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (114, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (114, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (115, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (115, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (116, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (116, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (116, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (117, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (117, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (117, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (118, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (118, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (118, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (119, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (119, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (119, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (120, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (120, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (120, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (121, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (121, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (121, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (122, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (122, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (122, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (122, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (123, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (123, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (123, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (123, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (124, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (124, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (124, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (124, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (125, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (125, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (125, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (125, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (126, 'WELDON Yvonne');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (126, 'SCOTT Linda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (126, 'JARRETT Shauna');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (126, 'ELLSMORE Sylvie');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (126, 'MOORE Clover');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (132, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (132, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (133, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (133, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (134, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (134, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (135, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (135, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (136, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (136, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (137, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (137, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (137, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (138, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (138, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (138, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (139, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (139, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (139, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (140, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (140, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (140, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (141, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (141, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (141, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (142, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (142, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (142, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (143, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (143, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (143, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (144, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (144, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (144, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (145, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (145, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (145, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (146, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (146, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (146, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (147, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (147, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (147, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (147, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (148, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (148, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (148, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (148, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (149, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (149, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (149, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (149, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (150, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (150, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (150, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (150, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (151, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (151, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (151, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (151, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (152, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (152, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (152, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (152, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (153, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (153, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (153, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (153, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (154, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (154, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (154, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (154, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (155, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (155, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (155, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (155, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (156, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (156, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (156, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (156, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (157, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (157, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (157, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (157, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (157, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (158, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (158, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (158, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (158, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (158, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (159, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (159, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (159, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (159, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (159, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (160, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (160, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (160, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (160, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (160, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (161, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (161, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (161, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (161, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (161, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (162, 'SWAN Tegan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (162, 'CECATO George');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (162, 'JUDGE Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (162, 'PRYCE Rodger');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (162, 'AMOS Paul');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (162, 'TOWNLEY Sally');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (165, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (165, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (166, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (166, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (167, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (167, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (168, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (168, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (169, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (169, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (169, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (170, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (170, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (170, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (171, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (171, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (171, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (172, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (172, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (172, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (173, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (173, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (173, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (174, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (174, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (174, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (175, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (175, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (175, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (175, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (176, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (176, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (176, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (176, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (177, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (177, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (177, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (177, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (178, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (178, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (178, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (178, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (179, 'HAMLING Jason');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (179, 'SPALDING Amanda');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (179, 'JONES Neil');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (179, 'DUFFY Kevin');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (179, 'MILETO Tony');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (180, 'BELL Robert');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (180, 'LEDGER Natasha');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (181, 'BELL Robert');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (181, 'STRUTT Isabel');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (182, 'BELL Robert');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (182, 'LEDGER Natasha');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (182, 'STRUTT Isabel');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (186, 'PINSON Peta');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (186, 'SHEPPARD Rachel');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (189, 'MOORE Sue');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (189, 'THOMPSON Danny');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (192, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (192, 'COOK Darlene');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (193, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (193, 'GRINDON-EKINS Vanessa');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (194, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (194, 'BIRD Elly');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (195, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (195, 'COOK Darlene');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (195, 'GRINDON-EKINS Vanessa');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (196, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (196, 'COOK Darlene');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (196, 'BIRD Elly');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (197, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (197, 'GRINDON-EKINS Vanessa');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (197, 'BIRD Elly');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (198, 'KRIEG Steve');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (198, 'COOK Darlene');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (198, 'GRINDON-EKINS Vanessa');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (198, 'BIRD Elly');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (204, 'BAKER Loretta');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (204, 'PENFOLD Philip');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (211, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (211, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (212, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (212, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (213, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (213, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (214, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (214, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (215, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (215, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (215, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (216, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (216, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (216, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (217, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (217, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (217, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (218, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (218, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (218, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (219, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (219, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (219, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (220, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (220, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (220, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (221, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (221, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (221, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (221, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (222, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (222, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (222, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (222, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (223, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (223, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (223, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (223, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (224, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (224, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (224, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (224, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (225, 'COOREY Cate');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (225, 'LYON Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (225, 'DEY Duncan');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (225, 'PUGH Asren');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (225, 'SWIVEL Mark');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (226, 'TURLEY Darriea');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (226, 'KENNEDY Tom');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (227, 'KENNEDY Tom');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (227, 'GALLAGHER Dave');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (228, 'TURLEY Darriea');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (228, 'KENNEDY Tom');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (228, 'GALLAGHER Dave');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (232, 'JOHNSON Jeff');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (232, 'CADWALLADER Sharon');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (235, 'TSIREKAS Angelo');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (235, 'LITTLE Julia');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (236, 'TSIREKAS Angelo');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (236, 'MEGNA Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (237, 'TSIREKAS Angelo');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (237, 'LITTLE Julia');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (237, 'MEGNA Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (239, 'ROZOS Angelo');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (239, 'TAYLOR Tanya');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (245, 'HAUVILLE Leo');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (245, 'CAMPBELL Liz');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (248, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (248, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (249, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (249, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (250, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (250, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (251, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (251, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (252, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (252, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (252, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (253, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (253, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (253, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (254, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (254, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (254, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (255, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (255, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (255, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (256, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (256, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (256, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (257, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (257, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (257, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (258, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (258, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (258, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (258, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (259, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (259, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (259, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (259, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (260, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (260, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (260, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (260, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (261, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (261, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (261, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (261, 'HANNAN Judy');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (262, 'BANASIK Michael');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (262, 'DEETH Matthew');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (262, 'LAW Ray');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (262, 'GOULD Matt');
INSERT INTO public.assertion_assumed_continuing (id, assumed_continuing) VALUES (262, 'HANNAN Judy');

INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (1, 'Bellingen Mayoral', '', '', 0, '', 'ALLAN Steve');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (2, 'Ballina Mayoral', '', '', 0, '', 'CADWALLADER Sharon');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (3, 'Burwood Mayoral', '', '', 0, '', 'FAKER John');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (4, 'City of Griffith Mayoral', '', '', 0, '', 'CURRAN Doug');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (5, 'Nambucca Valley Mayoral', '', '', 0, '', 'HOBAN Rhonda');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (6, 'City of Wollongong Mayoral', '', '', 0, '', 'BRADBERY Gordon');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (7, 'Mosman Mayoral', '', '', 0, '', 'CORRIGAN Carolyn');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (8, 'City of Cessnock Mayoral', '', '', 0, '', 'SUVAAL Jay');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (9, 'City of Lake Macquarie Mayoral', '', '', 0, '', 'FRASER Kay');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (10, 'Eurobodalla Mayoral', '', '', 0, '', 'HATCHER Mat');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (11, 'City of Newcastle Mayoral', '', '', 0, '', 'NELMES Nuatali');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (12, 'City of Shoalhaven Mayoral', '', '', 0, '', 'FINDLEY Amanda');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (13, 'The Hills Shire Mayoral', '', '', 0, '', 'GANGEMI Peter');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (14, 'City of Liverpool Mayoral', '', '', 0, '', 'MANNOUN Ned');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (15, 'City of Sydney Mayoral', '', '', 0, '', 'MOORE Clover');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (16, 'City of Shellharbour Mayoral', '', '', 0, '', 'HOMER Chris');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (17, 'City of Coffs Harbour Mayoral', '', '', 0, '', 'AMOS Paul');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (18, 'City of Orange Mayoral', '', '', 0, '', 'HAMLING Jason');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (19, 'Uralla Mayoral', '', '', 0, '', 'BELL Robert');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (20, 'Port Macquarie-Hastings Mayoral', '', '', 0, '', 'PINSON Peta');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (21, 'Singleton Mayoral', '', '', 0, '', 'MOORE Sue');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (22, 'City of Lismore Mayoral', '', '', 0, '', 'KRIEG Steve');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (23, 'City of Maitland Mayoral', '', '', 0, '', 'PENFOLD Philip');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (24, 'Port Stephens Mayoral', '', '', 0, '', 'PALMER Ryan');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (25, 'Hornsby Mayoral', '', '', 0, '', 'RUDDOCK Philip');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (26, 'Byron Mayoral', '', '', 0, '', 'LYON Michael');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (27, 'City of Broken Hill Mayoral', '', '', 0, '', 'KENNEDY Tom');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (28, 'Canada Bay Mayoral', '', '', 0, '', 'TSIREKAS Angelo');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (29, 'City of Willoughby Mayoral', '', '', 0, '', 'TAYLOR Tanya');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (30, 'Kempsey Mayoral', '', '', 0, '', 'HAUVILLE Leo');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (31, 'Richmond Valley Mayoral', '', '', 0, '', 'MUSTOW Robert');
INSERT INTO public.generate_assertions_summary (id, contest_name, error, message, version, warning, winner) VALUES (32, 'Wollondilly Mayoral', '', '', 0, '', 'GOULD Matt');
